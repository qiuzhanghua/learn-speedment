package com.example.demo.app.app.actor.generated;

import com.example.demo.app.app.actor.Actor;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.enterprise.datastore.runtime.field.DatastoreFields;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.ShortField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.example.demo.app.app.actor.Actor}-interface representing entities of the
 * {@code actor}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedActor {
    
    /**
     * This Field corresponds to the {@link Actor} field that can be obtained
     * using the {@link Actor#getActorId()} method.
     */
    ShortField<Actor, Short> ACTOR_ID = DatastoreFields.createShortField(
        Identifier.ACTOR_ID,
        Actor::getActorId,
        Actor::setActorId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link Actor} field that can be obtained
     * using the {@link Actor#getFirstName()} method.
     */
    StringField<Actor, String> FIRST_NAME = DatastoreFields.createStringField(
        Identifier.FIRST_NAME,
        Actor::getFirstName,
        Actor::setFirstName,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Actor} field that can be obtained
     * using the {@link Actor#getLastName()} method.
     */
    StringField<Actor, String> LAST_NAME = DatastoreFields.createStringField(
        Identifier.LAST_NAME,
        Actor::getLastName,
        Actor::setLastName,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the actorId of this Actor. The actorId field corresponds to the
     * database column app.app.actor.actor_id.
     * 
     * @return the actorId of this Actor
     */
    short getActorId();
    
    /**
     * Returns the firstName of this Actor. The firstName field corresponds to
     * the database column app.app.actor.first_name.
     * 
     * @return the firstName of this Actor
     */
    String getFirstName();
    
    /**
     * Returns the lastName of this Actor. The lastName field corresponds to the
     * database column app.app.actor.last_name.
     * 
     * @return the lastName of this Actor
     */
    String getLastName();
    
    /**
     * Sets the actorId of this Actor. The actorId field corresponds to the
     * database column app.app.actor.actor_id.
     * 
     * @param actorId to set of this Actor
     * @return        this Actor instance
     */
    Actor setActorId(short actorId);
    
    /**
     * Sets the firstName of this Actor. The firstName field corresponds to the
     * database column app.app.actor.first_name.
     * 
     * @param firstName to set of this Actor
     * @return          this Actor instance
     */
    Actor setFirstName(String firstName);
    
    /**
     * Sets the lastName of this Actor. The lastName field corresponds to the
     * database column app.app.actor.last_name.
     * 
     * @param lastName to set of this Actor
     * @return         this Actor instance
     */
    Actor setLastName(String lastName);
    
    enum Identifier implements ColumnIdentifier<Actor> {
        
        ACTOR_ID   ("actor_id"),
        FIRST_NAME ("first_name"),
        LAST_NAME  ("last_name");
        
        private final String columnId;
        private final TableIdentifier<Actor> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "app";
        }
        
        @Override
        public String getSchemaId() {
            return "app";
        }
        
        @Override
        public String getTableId() {
            return "actor";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Actor> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}