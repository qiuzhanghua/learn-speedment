package com.example.demo.app.app.authors.generated;

import com.example.demo.app.app.authors.Authors;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.enterprise.datastore.runtime.field.DatastoreFields;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.LongField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.example.demo.app.app.authors.Authors}-interface representing entities of
 * the {@code authors}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedAuthors {
    
    /**
     * This Field corresponds to the {@link Authors} field that can be obtained
     * using the {@link Authors#getId()} method.
     */
    LongField<Authors, Long> ID = DatastoreFields.createLongField(
        Identifier.ID,
        Authors::getId,
        Authors::setId,
        TypeMapper.primitive(),
        true
    );
    
    /**
     * Returns the id of this Authors. The id field corresponds to the database
     * column app.app.authors.id.
     * 
     * @return the id of this Authors
     */
    long getId();
    
    /**
     * Sets the id of this Authors. The id field corresponds to the database
     * column app.app.authors.id.
     * 
     * @param id to set of this Authors
     * @return   this Authors instance
     */
    Authors setId(long id);
    
    enum Identifier implements ColumnIdentifier<Authors> {
        
        ID ("id");
        
        private final String columnId;
        private final TableIdentifier<Authors> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "app";
        }
        
        @Override
        public String getSchemaId() {
            return "app";
        }
        
        @Override
        public String getTableId() {
            return "authors";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Authors> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}